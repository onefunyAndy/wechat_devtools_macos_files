'use strict';var _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a};!function(require,directRequire){const a=require('fs'),b=require('path'),c=require('react'),d=require('redux'),e=require('./4b3c32249e0fb6e8d60bd516d6975f06.js'),f=require('./e9e3fd38aeedddd6db73d1d015ff6952.js'),g=require('./a78e6d6a87de1708226375ca4c320d76.js'),h=require('./2a5e5cdfba5a7802665ffdcfcb8c054d.js'),i=require('./ba23d8b47b1f4ea08b9fd49939b9443f.js'),j=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),k=require('./d62fc37d7aa6416d5dcc240ba94175cd.js'),l=require('./f6cbcecf6ed9f533f6a506310d8f07b6.js'),m=require('./da7c31daaf542cf1796023d8e344b98a.js'),{connect:n}=require('react-redux'),o=global.appConfig&&global.appConfig.isDev;class p extends c.Component{constructor(a){super(a),this.enabled=!1,this._onRequestEvent=this.onRequestEvent.bind(this),this._sdkReqs={}}componentDidMount(){this._onMessage=this.onMessage.bind(this),e.devtools.register((a)=>{o&&console.warn('[audits] devtools messager receive msg'),this._onMessage(a)}),e.appservice.register((a)=>{o&&console.warn('[audits] appservice messager receive msg'),this._onMessage(a)}),this._onPluginMessage=this.onPluginMessage.bind(this),this.pluginMessager=f.get('audits_miniprogram'),this.pluginMessager.register(this._onPluginMessage)}componentWillUnmount(){e.devtools.unRegister(this._onMessage),e.appservice.unRegister(this._onMessage),this.pluginMessager.unRegister(this._onPluginMessage)}componentWillReceiveProps(a){if(this.enabled&&a.debugInfo!=this.props.debugInfo&&a.debugInfo){const b=this.convertDebuggerProtocolReqEventToChromeWebReqEvent(a.debugInfo);b&&this.pluginMessager.triggerOnEvent('ON_REQUEST_EVENT',{data:b})}}getAppserviceInjection(){const c=global.appConfig.isDev?'./js/ideplugin/audits/inject/appservice.js':b.join(__dirname,'./ideplugin/audits/inject/appservice.js');return`${a.readFileSync(c,'utf8')}`}getWebviewInjection(){const c=global.appConfig.isDev?'./js/ideplugin/audits/inject/webview.js':b.join(__dirname,'./ideplugin/audits/inject/webview.js');return`${a.readFileSync(c,'utf8')}`}normalizePath(a){return a=a.replace(/\\/g,'/'),'/'===a[0]?a.substr(1):a}async getFileUtils(){return this.fileUtils||(this.fileUtils=await k(this.props.project.projectpath)),this.fileUtils}async getFiles(){function c(b){return new Promise((c,d)=>{a.lstat(b,(a,b)=>{a?d(a):c(b)})})}return new Promise(async(a)=>{const d=await this.getFileUtils(),e=d.getAllFileWithDir().map((a)=>'/'+a),f={},g=this.props.project.projectpath;for(const d of e)try{const a=await c(b.join(g,d));f[d]=_extends({},a,{isDir:a.isDirectory(),isFile:!a.isDirectory()})}catch(a){f[d]={}}a({files:e,info:f})})}async onMessage(a){o&&console.warn('audits msg',a);try{a=JSON.parse(a)}catch(a){}const{command:b,data:c}=a;switch(b){case'TRANSFER':{e.appservice.send(a),e.devtools.send(a),this.pluginMessager.triggerOnEvent('TRANSFER',a);break}}}async onPluginMessage(a){o&&console.warn('audits plugin message',a);try{a=JSON.parse(a)}catch(a){}let{command:b,data:c}=a;switch(b){case'TRANSFER':{e.appservice.send(a),e.devtools.send(a);break}case'FS_GET_FILES':{this.getFiles().then((a)=>{this.pluginMessager.triggerOnEvent('RESP_FS_GET_FILES',{data:{res:a}})}).catch((a)=>{this.pluginMessager.triggerOnEvent('RESP_FS_GET_FILES',{data:{err:a.toString()}})});break}case'FS_READ_FILE':{try{const a=await this.getFileUtils(),b=a.getFile(this.normalizePath(c.path));this.pluginMessager.triggerOnEvent('RESP_FS_READ_FILE',{data:{fileData:b,path:c.path}})}catch(a){this.pluginMessager.triggerOnEvent('RESP_FS_READ_FILE',{data:{err:a.toString()}})}break}case'FS_READ_TEMP_FILE':{try{const a=l.readFile(this.props.project,c.filePath,c.encoding);a.error?this.pluginMessager.triggerOnEvent('RESP_FS_READ_TEMP_FILE',{data:{err:a.reason}}):this.pluginMessager.triggerOnEvent('RESP_FS_READ_TEMP_FILE',{data:{filePath:c.filePath,encoding:c.encoding,fileData:a.fileData}})}catch(a){this.pluginMessager.triggerOnEvent('RESP_FS_READ_TEMP_FILE',{data:{err:a.toString()}})}break}case'START_EXPERIENCE_ANALYSIS':{this.enabled=!0,g.on('all',this._onRequestEvent),this.props.compile();break}case'STOP_EXPERIENCE_ANALYSIS':{this.enabled=!1,g.removeListener('all',this._onRequestEvent),h.remove('appservice'),h.remove('webview'),this.pluginMessager.triggerOnEvent('STOP_EXPERIENCE_ANALYSIS',a);break}case'INJECT':{const a=this.getAppserviceInjection(),b=this.getWebviewInjection();g.webviews.simulator.forEach((a)=>{a._webview.executeScript({code:`var __exp_inject_script__ = document.createElement('script'); __exp_inject_script__.src = 'http://127.0.0.1:${global.proxyPort}/experience/inject/webview.js'; document.body.appendChild(__exp_inject_script__)`})});const c=g.webviews.appservice;c&&c._webview.executeScript({code:`var __exp_inject_script__ = document.createElement('script'); __exp_inject_script__.src = 'http://127.0.0.1:${global.proxyPort}/experience/inject/appservice.js'; document.body.appendChild(__exp_inject_script__)`}),h.add({id:'appservice',html:`<script>${a}</script>`,conditions:{type:'appservice',position:'onDocumentStart'}}),h.add({id:'webview',html:`<script>${b}</script>`,conditions:{type:'simulator',position:'onDocumentStart'}});break}case'REPORT':m('audits_info_report',this.props.project.appid,a.data);}}onRequestEvent(a){this.pluginMessager.triggerOnEvent('ON_REQUEST_EVENT',{data:a})}convertDebuggerProtocolReqEventToChromeWebReqEvent(a){function b(a,b){try{return a()}catch(a){return b}}try{switch(a.method){case'Network.requestWillBeSent':{const c={frameId:0,method:b(()=>a.params.request.method.toUpperCase(),'GET'),parentFrameId:-1,requestId:b(()=>a.params.requestId,-1),tabId:-1,timeStamp:b(()=>a.params.timestamp,+new Date),type:'xmlhttprequest',url:b(()=>a.params.request.url,'')},d={eventName:'onBeforeRequest',type:'appservice',deviceInfo:{id:'appservice'},details:c};return this._sdkReqs[c.requestId]={onBeforeRequest:d},d}case'Network.responseReceived':{const c=b(()=>a.params.requestId,-1);if(this._sdkReqs[c]&&this._sdkReqs[c].onResponseStarted)return;const d=this._sdkReqs[c].onBeforeRequest,e=b(()=>a.params.response.status,200),f=b(()=>a.params.response.statusText,'OK'),g=`HTTP/1.1 ${e} ${f}`,h={eventName:'onResponseStarted',type:'appservice',deviceInfo:{id:'appservice'},details:{frameId:0,fromCache:!1,method:d.details.method,parentFrameId:-1,requestId:c,statusCode:e,statusLine:g,timeStamp:b(()=>a.params.timestamp,+new Date),tabId:-1,type:'xmlhttprequest',url:d.details.url}};return this._sdkReqs[c].onResponseStarted=h,h}case'Network.dataReceived':return;case'Network.loadingFinished':{const c=b(()=>a.params.requestId,-1),d=this._sdkReqs[c].onResponseStarted,e={eventName:'onCompleted',type:'appservice',deviceInfo:{id:'appservice'},details:{frameId:0,fromCache:!1,method:d.details.method,parentFrameId:-1,requestId:c,statusCode:d.details.statusCode,statusLine:d.details.statusLine,tabId:-1,timeStamp:b(()=>a.params.timestamp,+new Date),type:'xmlhttprequest',url:d.details.url}};return delete this._sdkReqs[c],e}case'Network.loadingFailed':{const c=b(()=>a.params.requestId,-1),d=this._sdkReqs[c].onBeforeRequest,e={eventName:'onErrorOccurred',type:'appservice',deviceInfo:{id:'appservice'},details:{error:b(()=>a.params.errorText,'unknown error'),frameId:0,fromCache:!1,method:d.details.method,parentFrameId:-1,requestId:c,tabId:-1,timeStamp:b(()=>a.params.timestamp,+new Date),type:'xmlhttprequest',url:d.details.url}};return delete this._sdkReqs[c],e}}}catch(a){console.warn(a)}}render(){return null}}module.exports=n((a)=>({debugInfo:a.simulator.debugInfo,project:a.project.current}),(a)=>({compile:j.bindActionCreators(i.compile,a)}))(p)}(require('lazyload'),require);