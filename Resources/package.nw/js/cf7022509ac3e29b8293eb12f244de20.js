'use strict';!function(require,directRequire){const a=require('fs'),b=require('url'),c=require('path'),d=require('react'),{connect:e}=require('react-redux'),f=require('mkdir-p'),g=require('./c5328fab361f285d2e9faf747628342c.js'),h=require('./db2217eb4cff896bdcbc50abe005058f.js'),i=require('./a8c87029da0fa06e986298d447ab0fe2.js'),j=require('./e298e91f85bae5b5a2b792e6e73a55e3.js'),k=require('./f171257bbcaef547a3cf27266ccb0db2.js'),l=require('./15ba1827c7f6564a45df6bd44da3a977.js'),m=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),n=require('./7c7764dce1bf6b5d926fb9dbf977c030.js'),o=require('./e9e3fd38aeedddd6db73d1d015ff6952.js'),p=require('./84858de8a097c9cf84ff2c2e3d86e2a9.js'),q=require('./72653d4b93cdd7443296229431a7aa9a.js'),r=require('./2dfc6a3df6d6fc51266b293c8420e88b.js'),s=require('./56c390e04c10e91a4aa2a2c19d9a885d.js'),t=require('./5321b622f9bab971490e99e09b2389a9.js'),u=require('./3e74bc0c6a5fa450386148788cc0cf44.js'),v=require('./1fcc6bd55b687d154a4247e57fe3011d.js');window.timings=[];class w extends d.Component{constructor(a){super(a),this._onCloudConsoleMessage=this.onMessage.bind(this),this._onPluginMessage=this.onPluginMessage.bind(this),this.consoleMessager=n.get(t.EXTENSION_ID),this.consoleMessager.register(this._onCloudConsoleMessage),this.pluginMessager=o.get('cloudconsole'),this.pluginMessager.persistId=`${this.props.appid}-console`,this.pluginMessager.register(this._onPluginMessage),this.state={tmpcode:''}}componentDidMount(){u.getTicket().then((a)=>{this.setState({tmpcode:a})}).catch((a)=>{q.error(`cloud console init error: ${a.toString()}`),this.props.setCloud({console:{show:!1}})}),this.initGetWindow()}componentWillReceiveProps(a){a.loginStatus!=this.props.loginStatus&&(a.loginStatus==s.LOGIN_STATUS.SUCCESS?setTimeout(()=>{this.sendTmpCode()}):a.loginStatus==s.LOGIN_STATUS.EXPIRED&&this.consoleMessager.send({command:t.IDE_LOGIN_EXPIRED})),a.command!=this.props.command&&this.consoleMessager.send(a.command)}componentWillUnmount(){this.consoleMessager.unRegister(this._onCloudConsoleMessage),this.pluginMessager.unRegister(this._onPluginMessage)}async initGetWindow(){}async onPluginMessage(a){const{command:b,data:c,callbackID:d}=a;switch(b){case'REQUEST_WITH_TOKEN':{try{let a=await l({url:c.url,method:c.method||'GET',body:JSON.stringify(c.data||{}),headers:c.headers||{},needParse:'json'==c.dataType?1:-1,needCheckErrCode:-1,needToken:1,needAppID:1});this.pluginMessager.callback(d,a)}catch(a){this.pluginMessager.callback(d,{error:a.toString()})}break}case'GET_PROJECT_INFO':{try{this.pluginMessager.callback(d,{appid:this.props.appid,attr:{qbaseInfo:this.props.project.attr&&this.props.project.attr.qbaseInfo}})}catch(a){this.pluginMessager.callback(d,{error:a.toString()})}break}case'GET_CLOUD_SERVICE':{try{const a=await u.getQBaseInfo();this.pluginMessager.callback(d,{open:a.open})}catch(a){this.pluginMessager.callback(d,{error:a.toString()})}break}case'OPEN_CLOUD_SERVICE':{try{await u.setQBaseInfo(),this.pluginMessager.callback(d,{})}catch(a){this.pluginMessager.callback(d,{error:a.toString()})}break}}}async onMessage(b){try{b=JSON.parse(b)}catch(a){}let{command:d,data:e}=b;switch(d){case t.GET_TMP_CODE:{this.sendTmpCode();break}case t.SELECT_SCF_LOCALROOT:{let b=this.props.project;b.cloudfunctionRoot&&a.existsSync(c.join(b.projectpath,b.cloudfunctionRoot))||this.props.setCloud({cloudfunctionRoot:{show:!0,in:'main'}});break}case t.CREATE_SCF_DIR:{let b=this.props.project;if(b.cloudfunctionRoot&&a.existsSync(c.join(b.projectpath,b.cloudfunctionRoot))){let d=c.join(b.projectpath,b.cloudfunctionRoot,e.functionName);a.existsSync(d)||f.sync(d)}break}case t.EDIT_SCF:{let b=nw.Window.get();b.focus();let d=this.props.project,f=c.join(d.projectpath,d.cloudfunctionRoot);if(!d.cloudfunctionRoot||!a.existsSync(f))return void this.props.setCloud({cloudfunctionRoot:{show:!0,in:'main'}});this.props.currentEnv.namespace!=e.namespace&&this.props.tcbActions.setCurrentEnv(e.namespace);let g=c.join(f,e.functionName,'index.js');a.existsSync(g)?this.props.openEditorFile({file:`/${c.posix.relative(d.projectpath,g)}`,line:0}):this.props.tcbActions.downloadTcbFunc({showTips:!0,writeFile:!0,namespace:e.namespace,dirPath:c.join(f,e.functionName),functionName:e.functionName});break}}}async sendTmpCode(){try{const a=await u.getTicket();this.consoleMessager.send({command:t.SEND_TMP_CODE,data:{tmpcode:a}})}catch(a){}}onWindowOpen(a){this.win=a,window.w=a,a.on('new-win-policy',function(a,b,c){c.ignore(),nw.Shell.openExternal(b)})}onWindowClose(){this.props.setCloud({console:{show:!1}})}render(){if(!this.state.tmpcode)return null;let a,b;try{a=1200,b=nw.Screen.screens[0].work_area.height,b>global.Win.height&&(b=global.Win.height);for(const c of nw.Screen.screens){const{work_area:{width:d,height:e}}=c;a>d&&(a=d),b>e&&(b=e)}}catch(c){a=1200,b=this.props.win?this.props.win.height:global.Win.height}return d.createElement(g,{title:'\u4E91\u5F00\u53D1\u63A7\u5236\u53F0',webview:!0,userAgent:'extension pluginid/cloudconsole',width:a,height:b,persistId:`${this.props.appid}-console`,pluginId:'cloudconsole',registryId:s.WINDOW_REGISTRY.CLOUD_CONSOLE,url:this.props.manifest.main,onWindowOpen:this.onWindowOpen.bind(this),onWindowClose:this.onWindowClose.bind(this)})}}module.exports=e((a)=>{const b=a.project.current,c=b.tcb||{};return{project:b,appid:a.project.current.appid,loginStatus:a.user.loginStatus,command:c.command,currentEnv:c.currentEnv||{},url:a.window.cloud&&a.window.cloud.console&&a.window.cloud.console.url}},(a)=>{return{setCloud:m.bindActionCreators(i.setCloud,a),tcbActions:m.bindActionCreators(j,a),openEditorFile:m.bindActionCreators(v.openEditorFile,a)}})(w)}(require('lazyload'),require);