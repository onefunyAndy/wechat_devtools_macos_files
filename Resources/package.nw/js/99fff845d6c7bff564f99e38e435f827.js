'use strict';!function(require,directRequire){const a=require('path'),b=require('react'),c=require('redux'),d=require('classnames'),e=require('./0db6515f85d6f6210c2d50722041eb1f.js'),f=require('./d00040b9bed6196b3701ea7c8a4b4db3.js'),g=require('./9a24eb4fb7a49d4dd24531943fc3c899.js'),h=require('./ba23d8b47b1f4ea08b9fd49939b9443f.js'),i=require('./ee4168d3d76e7e2f3fd66e4134821f90.js'),j=require('./1fcc6bd55b687d154a4247e57fe3011d.js'),k=require('./a15851ca252a104aad8b3fd3fc114574.js'),l=require('./e9e3fd38aeedddd6db73d1d015ff6952.js'),{connect:m}=require('react-redux');class n extends b.Component{constructor(a){super(a)}componentDidMount(){this._onMessage=this.onMessage.bind(this),this.wxmlMessager=l.get('wxml_miniprogram'),this.wxmlMessager.ready=!1,this.wxmlMessager.register(this._onMessage)}componentWillUnmount(){this.wxmlMessager.unRegister(this._onMessage)}componentWillReceiveProps(a){(a.debuggee!=this.props.debuggee&&a.debuggee||a.ready!=this.props.ready&&a.ready)&&setTimeout(()=>{this.changeDebuggee()}),a.wxmlInspected!=this.props.wxmlInspected&&setTimeout(()=>{this.inspectModeChange()})}changeDebuggee(){if(this.props.wxmlDebuggee&&this.props.ready){const a=this.props;this.wxmlMessager.triggerOnEvent('CHANGE_DEBUGGEE',{debuggee:a.wxmlDebuggee,debuggeeMap:a.debuggeeMap,device:a.device}),this.props.wxmlInspected&&this.inspectModeChange()}}async openEditorFile(b){const c=this.props.project,d=c.miniprogramRoot?a.posix.join(c.projectpath,c.miniprogramRoot):c.projectpath,e=a.posix.relative(c.projectpath,a.posix.join(d,b.file));this.props.openEditorFile({file:`/${e}`,line:parseInt(b.line)})}onMessage(a){let{command:b,data:c,callbackID:d}=a;'GET_CURRENT_DEBUGGEE'===b?(this.wxmlMessager.ready=!0,setTimeout(()=>{this.changeDebuggee()})):'SEND_COMMAND'===b?global.useChromeRemoteDebugProtocal?e.sendCommand(c.debuggee,c.method,c.commandParams,(a)=>{this.wxmlMessager.callback(d,a)}):k.triggerOnEvent({webviewID:c.debuggee.targetId,eventName:'remoteDebugCommand',data:{method:c.method,commandParams:c.commandParams,callbackID:d}}):'OPEN_FILE'===b?this.openEditorFile(c):'ON_PANEL_HIDE'===b||'HIDE_INSPECT_MODE'==b&&(this.props.wxmlInspected?this.props.setWxmlInspect(!1):this.hideInspectMode())}hideInspectMode(){if(global.useChromeRemoteDebugProtocal){const a=this.props.debuggee;if(!a)return;e.sendCommand(a,'DOM.hideHighlight',{},()=>{}),e.sendCommand(a,'Overlay.setInspectMode',{mode:'none'},()=>{})}k.triggerOnEvent({webviewID:this.props.currentWebviewID,eventName:'remoteDebugCommand',data:{method:'DOM.hideHighlight',commandParams:{}}}),k.triggerOnEvent({webviewID:this.props.currentWebviewID,eventName:'remoteDebugCommand',data:{method:'Overlay.setInspectMode',commandParams:{mode:'none'}}})}inspectModeChange(){const a=this.props.debuggee;a&&(this.props.wxmlInspected?global.useChromeRemoteDebugProtocal?e.sendCommand(a,'Overlay.setInspectMode',{mode:'searchForNode',highlightConfig:i},()=>{}):k.triggerOnEvent({webviewID:this.props.currentWebviewID,eventName:'remoteDebugCommand',data:{method:'Overlay.setInspectMode',commandParams:{mode:'searchForNode',highlightConfig:i}}}):this.hideInspectMode(),this.wxmlMessager.triggerOnEvent('SET_INSPECT_MODE',this.props.wxmlInspected))}inspectorWxml(){this.props.debuggee&&(!this.props.wxmlInspected&&g.send({command:'SHOW_PANNEL',data:{name:'Wxml'}}),this.props.setWxmlInspect(!this.props.wxmlInspected))}render(){return b.createElement('div',{style:{position:'absolute',width:33,height:26,zIndex:2,background:'#F3F3F3'}},b.createElement('div',{className:'devtools-inspector-bg'}),b.createElement('i',{style:{position:'relative',left:'10px',top:'3px',background:this.props.wxmlInspected?'#3e82f7':''},className:d('ui-icon-inspect',{active:this.props.wxmlInspected}),onClick:this.inspectorWxml.bind(this)}))}}module.exports=m((a)=>{const b=a.simulator.currentWebviewID,c=a.simulator.debuggeeMap,d=c[b];let e=d;const f=a.simulator.webviewInfos,g=f[b]||{},h=a.toolbar.deviceInfo||{},i={};if(!global.useChromeRemoteDebugProtocal){for(const a in f)f[a]&&(i[a]={targetId:a+''});e={targetId:b+''}}else for(const a in c){const b=c[a];b&&(i[b.targetId]=b)}return{device:{width:h.screenWidth,dpr:h.dpr},project:a.project.current,ready:g.ready,wxmlInspected:a.simulator.wxmlInspected,debuggeeMap:i,wxmlDebuggee:e,currentWebviewID:b,debuggee:d,webviewInfos:f}},(a)=>({setWxmlInspect:(b)=>{a(h.setWxmlInspect(b))},openEditorFile:(b)=>{a(j.openEditorFile(b))}}))(n)}(require('lazyload'),require);