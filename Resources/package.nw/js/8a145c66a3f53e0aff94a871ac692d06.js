'use strict';var _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a};!function(require,directRequire){async function a(a){if(a.startsWith('http')){for(let b=1;3>=b;b++)try{const b=await d({uri:a,simple:!1,proxy:!1,resolveWithFullResponse:!0,encoding:null});if(200===b.statusCode)return console.log(`download codepkg from ${a} succeeded with status ${b.statusCode}`),[b.body];console.error(`download codepkg from ${a} failed with status ${b.statusCode}, body: ${b.body}`)}catch(c){console.error(`download codepkg from ${a} attempt #${b} failed with error: ${c.toString()}`)}console.error(`abort download codepkg from ${a}, failed with too many retries`)}else{const d=b.readdirSync(a),e=[];d.forEach((b)=>{/\.wxapkg$/.test(b)&&e.push(c.join(a,b))});const f=[];for(let a=0,c=e.length;a<c;a++){const c=e[a];f.push(b.readFileSync(c))}return f}}const b=require('fs'),c=require('path'),d=require('request-promise-native'),e=require('./15ba1827c7f6564a45df6bd44da3a977.js'),f=require('./f171257bbcaef547a3cf27266ccb0db2.js'),g=require('./29552ee79b3c130ddd9b6e8c13c40be9.js'),h=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js');let i={};const j={};module.exports=async(b)=>{const c=b.projectid;return i[c]?i[c]:(i={},new Promise(async(d,e)=>{if(!j[c])j[c]=[{resolve:d,reject:e}];else return void j[c].push({resolve:d,reject:e});const f=await a(b.projectpath);let h=f.length;i[c]={};for(let a=0,b=f.length;a<b;a++){const b=f[a];g(b).then((a)=>{h--,i[c]=_extends({},i[c],a),0>=h&&j[c].forEach((a)=>{a.resolve(i[c])})}).catch(()=>{j[c].forEach((a)=>{a.reject(i[c])}),delete j[c]})}}))}}(require('lazyload'),require);