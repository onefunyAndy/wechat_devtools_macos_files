'use strict';!function(require,directRequire){function a(a,b){return function(...c){if(c.length){const a=c.pop();'function'!=typeof a&&c.push(a)}return new Promise(function(d,e){c.push(function(a,b){a?e(a):d(b)}),a.apply(b||null,c)})}}async function b(a,c,d){const f=d.jsMap,i=d.jsonMap;if(!f[a]){const m=await j(a),n=m&&m.isDirectory();if(n){const e=await k(a);for(const f of e){if('node_modules'===f)continue;const e=h.resolve(a,f);await b(e,c,d)}}else if(/\.js$/.test(a)){const i=a,j=a.substring(c.length),m=h.dirname(i),n=h.dirname(j),o=h.basename(i,'.js'),p=await l(i,'utf8'),q=[],r=/(?:require\(['|"|`](.*?)['|"|`]\)|import\s+(?:.*?)['|"|`](.*?)['|"|`])/g;for(let a=r.exec(p);a;)q.push(a[1]||a[2]),a=r.exec(p);for(const a of q){let f=await e(m,a);f||(f=await g(c,n,a)),f&&(f=h.normalize(f),await b(f,c,d))}f[i]=!0;const s=await k(m);for(const a of s)(a===o+'.wxml'||a===o+'.wxss')&&(f[h.join(m,a)]=!0),a===o+'.json'&&(await b(h.join(m,a),c,d))}else if(/\.json$/.test(a)){const j=a,k=a.substring(c.length),l=h.dirname(j),m=h.dirname(k);try{const f=require(a);if(f.usingComponents||f.componentGenerics){const j=f.usingComponents||{},k=f.componentGenerics||{},n=[].concat(Object.keys(j),Object.keys(k)),o=['usingComponents','componentGenerics'];for(const j of o){const k=f[j]||{},n=Object.keys(k);for(const f of n){const n='object'==typeof k[f]?k[f].default:k[f];if(!n)continue;let o=await e(l,n);if(o||(o=await g(c,m,n)),o){o=h.normalize(o),await b(o,c,d);let e=h.relative(h.dirname(a),o).replace(/\\/g,'/');/\.js$/.test(e)&&(e=e.substring(0,e.length-3)),(0===e.indexOf('node_modules/')||0<e.indexOf('/node_modules/'))&&i.push({filePath:a,key:f,value:n,newValue:e,isInUsingComponents:'usingComponents'===j,isInComponentGenerics:'componentGenerics'===j})}}}}}catch(a){}f[j]=!0}}}async function c(a){const c={jsMap:{},jsonMap:[]};return a=h.normalize(a),await b(a,a,c),{requireList:Object.keys(c.jsMap).filter((b)=>{const c=b.substring(a.length);return 0<=c.indexOf(`${h.sep}node_modules${h.sep}`)}),needToUpdateJsonList:c.jsonMap}}function d(a){const b=h.resolve(a,'package.json');try{const a=require(b);return a.main}catch(a){return'index.js'}}async function e(a,b){let c=h.resolve(a,b);try{const a=await j(c),b=a&&a.isDirectory();b&&(c=h.resolve(c,d(c)))}catch(a){}try{return /\.js$/.test(c)||(c+='.js'),await m(c),c}catch(a){return null}}async function f(a){let b=/\.js$/.test(a)?a:`${a}.js`;try{return await m(b),b}catch(a){}b=h.join(a,d(a)),/\.js$/.test(b)||(b+='.js');try{return await m(b),b}catch(a){}return''}async function g(a,b,c){const d=h.normalize(b).split(h.sep).filter((a)=>!!a);let e;for(;d.length;){const b=h.resolve(a,d.join(h.sep),'node_modules',c);if(e=await f(b),e)break;d.pop()}if(!e){const b=h.resolve(a,'node_modules',c);e=await f(b)}return e||null}const h=require('path'),i=require('fs'),j=a(i.stat),k=a(i.readdir),l=a(i.readFile),m=a(i.access);module.exports=async function(a){return await c(a)}}(require('lazyload'),require);